[{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/articles/annotation-use-cases.html","id":"installation-instructions","dir":"Articles","previous_headings":"","what":"Installation instructions","title":"Use Cases for Metabolomics Data Annotation Using the `MetaboAnnotation` package","text":"R packages well example files used document can installed R code : source code document along test data can downloaded github repository https://github.com/jorainer/MetaboAnnotationTutorials command (alternatively downloading zip archive directly github page).","code":"install.packages(\"BiocManager\") BiocManager::install(\"jorainer/MetaboAnnotationTutorials\",     dependencies = TRUE, ask = FALSE, update = TRUE) git clone https://github.com/jorainer/MetaboAnnotationTutorials"},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/articles/annotation-use-cases.html","id":"ms1-annotation","dir":"Articles","previous_headings":"","what":"\\(MS^1\\) annotation","title":"Use Cases for Metabolomics Data Annotation Using the `MetaboAnnotation` package","text":"example annotate chromatographic peaks identified test sample provided within repository first based m/z values using m/z retention times previously determined values set pure standards. test data represents LC-MS/MS measurements set metabolite standards. brief, aliquots pure standards 15 metabolites solved water injected LC-MS system. Details provided Material Methods section main text. load data distributed within MetaboAnnotationTutorials package perform chromatographic peak detection using xcms package. next perform chromatographic peak detection using centWave algorithm followed peak refinement reduce number peak detection artifacts, split-peaks overlapping peaks (see LC-MS/MS data analysis xcms vignette xcms package details chromatographic peak detection settings). total 175 chromatographic peaks identified. even expected since sample represents mixture 15 pure standards solved water. display first 6 detected chromatographic peaks. next annotate chromatographic peaks using m/z values. reference load CompDb database containing compounds Human Metabolom Database (Wishart et al. 2021) version 5.0 also provided data release MetaboAnnotationTutorials github repository. database build HMDB 5.0 (2021-11-02) using CompoundDb package (see package documentation information). download database github temporary folder. next load database using CompoundDb package. Note: annotating chromatographic peaks xcms result object, also possible annotate LC-MS features using approach simply exchanging chromPeaks call featureDefinitions. addition, annotation also performed SummarizedExperiment representing preprocessing results can generated xcms result object using quantify method.","code":"library(xcms)  fl <- system.file(\"mzML\", \"HighIS_Mix07_CE20_POS.mzML\",                   package = \"MetaboAnnotationTutorials\")  std_data <- readMSData(fl, mode = \"onDisk\") #' Peak detection cwp <- CentWaveParam(snthresh = 10, prefilter = c(3, 4000), ppm = 40,                      peakwidth = c(2, 8), integrate = 2) std_data <- findChromPeaks(std_data, param = cwp) #' Peak refinement std_data <- refineChromPeaks(     std_data, MergeNeighboringPeaksParam(expandRt = 3)) head(chromPeaks(std_data)) ##              mz     mzmin     mzmax     rt  rtmin  rtmax       into       intb ## CP001 355.28240 355.28193 355.28369 30.495 24.575 37.641  83909.909  78939.997 ## CP002 358.98005 358.97954 358.98037 10.390 10.065 11.356   7002.894   6897.381 ## CP003 413.26607 413.26573 413.26704 32.892 25.729 37.641 102217.289 100770.550 ## CP004 301.14091 301.13962 301.14279 25.729 24.575 40.013  47095.520  44283.920 ## CP005  80.02494  80.02419  80.02543 40.013 35.261 56.554  53223.003  53005.070 ## CP006  63.99953  63.99950  63.99958 42.371 35.261 61.268 156775.850 156184.543 ##            maxo  sn sample ## CP001 10329.126  25      1 ## CP002  5138.685  32      1 ## CP003 22355.266  90      1 ## CP004  7085.818  40      1 ## CP005  6082.308 181      1 ## CP006 17705.469 242      1 #' Download the CompDb database using curl library(curl) dbname <- \"CompDb.Hsapiens.HMDB.5.0.sqlite\" db_file <- file.path(tempdir(), dbname) curl_download(     paste0(\"https://github.com/jorainer/MetaboAnnotationTutorials/\",            \"releases/download/2021-11-02/\", dbname),     destfile = db_file) library(CompoundDb) #' Load a CompDb database with compound annotation from HMDB cdb <- CompDb(db_file) cdb ## class: CompDb  ##  data source: HMDB  ##  version: 5.0  ##  organism: Hsapiens  ##  compound count: 217776  ##  MS/MS spectra count: 64920"},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/articles/annotation-use-cases.html","id":"ms1mz","dir":"Articles","previous_headings":"\\(MS^1\\) annotation","what":"Annotation using m/z values","title":"Use Cases for Metabolomics Data Annotation Using the `MetaboAnnotation` package","text":"next extract peaks xcms result object annotate using matchMz function compounds HMDB (compound annotations can extracted CompDb database compounds function). reference database provide m/z values exact masses compound. Thus, order annotate chromatographic peaks’ m/z values, m/z values expected ions compounds need calculated first. Mass2MzParam can configure parameters annotation. Parameter adducts allows specify adducts (ions) expect see mostly data set. example assume see mostly [M+H]+ [M+Na]+ positive ions. parameters tolerance ppm can finally define also absolute /m/z relative acceptable difference, respectively, m/z values considered matching. result object handles potential many--many matching chromatographic peaks (query) reference (target) contains information query target object along score match (case difference m/z values). list available information result object. n:m mapping represented matches data frame. maps annotated query element matching target elements. list first 6 rows table. Column \"score\" provides difference query target m/z values (Da) \"ppm_error\" ppm error. users ’s however convenient extract annotation information matchedData function, return data frame annotations. query elements annotated one target element listed many rows matches. matching query elements represented single row result table, containing NA annotations. extract annotations, restricting annotation columns. can see, number rows data frame much larger number chromatographic peaks. peaks fact annotated several possible compounds based m/z. average number compounds chromatographic peak data annotated calculated . Annotations result object organized query, annotations individual query elements can thus accessed easily. list annotations first chromatographic peak. compounds thus exact chemical formula hence, using m/z value, can discriminate determine correct annotation. Considering also retention times allow better annotation increase confidence.","code":"library(MetaboAnnotation)  #' Get the chromatographic peaks and add a column with the peak_id pks <- data.frame(peak_id = rownames(chromPeaks(std_data)),                   chromPeaks(std_data))  #' Set parameters for the m/z-based annotation param <- Mass2MzParam(adducts = c(\"[M+H]+\", \"[M+Na]+\"),                       tolerance = 0, ppm = 10)  #' Perform the matching pks_match <- matchMz(     pks,     compounds(cdb, c(\"compound_id\", \"exactmass\", \"formula\", \"name\")),     param = param)  pks_match ## Object of class Matched  ## Total number of matches: 697  ## Number of query objects: 175 (112 matched) ## Number of target objects: 217776 (393 matched) colnames(pks_match) ##  [1] \"peak_id\"            \"mz\"                 \"mzmin\"              ##  [4] \"mzmax\"              \"rt\"                 \"rtmin\"              ##  [7] \"rtmax\"              \"into\"               \"intb\"               ## [10] \"maxo\"               \"sn\"                 \"sample\"             ## [13] \"target_compound_id\" \"target_name\"        \"target_formula\"     ## [16] \"target_exactmass\"   \"adduct\"             \"score\"              ## [19] \"ppm_error\" head(matches(pks_match)) ##   query_idx target_idx adduct        score ppm_error ## 1         1       6977 [M+H]+ -0.001888540  5.315573 ## 2         1       7006 [M+H]+ -0.001888540  5.315573 ## 3         1     158233 [M+H]+ -0.001888540  5.315573 ## 4         1     160274 [M+H]+ -0.001888540  5.315573 ## 5         1     170679 [M+H]+ -0.001888540  5.315573 ## 6         2     164617 [M+H]+  0.003242238  9.031887 matchedData(pks_match, c(\"peak_id\", \"target_name\",                          \"target_formula\", \"adduct\")) ## DataFrame with 760 rows and 4 columns ##               peak_id   target_name target_formula      adduct ##           <character>   <character>    <character> <character> ## CP001           CP001 MG(0:0/18:...       C21H38O4      [M+H]+ ## CP001.1         CP001 MG(18:2(9Z...       C21H38O4      [M+H]+ ## CP001.2         CP001 Glyceryl m...       C21H38O4      [M+H]+ ## CP001.3         CP001 2-Linoleoy...       C21H38O4      [M+H]+ ## CP001.4         CP001    RIOPROSTIL       C21H38O4      [M+H]+ ## ...               ...           ...            ...         ... ## CPM186.9       CPM186 4-Ethoxy-p...        C12H22O     [M+Na]+ ## CPM186.10      CPM186 cis-3-Etho...        C12H22O     [M+Na]+ ## CPM187         CPM187            NA             NA          NA ## CPM188         CPM188            NA             NA          NA ## CPM189         CPM189            NA             NA          NA matches(pks_match)[, 1] |> table() |> mean() ## [1] 6.223214 matchedData(pks_match[1], c(\"peak_id\", \"target_name\",                             \"target_formula\", \"adduct\")) ## DataFrame with 5 rows and 4 columns ##             peak_id   target_name target_formula      adduct ##         <character>   <character>    <character> <character> ## CP001         CP001 MG(0:0/18:...       C21H38O4      [M+H]+ ## CP001.1       CP001 MG(18:2(9Z...       C21H38O4      [M+H]+ ## CP001.2       CP001 Glyceryl m...       C21H38O4      [M+H]+ ## CP001.3       CP001 2-Linoleoy...       C21H38O4      [M+H]+ ## CP001.4       CP001    RIOPROSTIL       C21H38O4      [M+H]+"},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/articles/annotation-use-cases.html","id":"annotation-using-reference-mz-and-retention-times","dir":"Articles","previous_headings":"\\(MS^1\\) annotation","what":"Annotation using reference m/z and retention times","title":"Use Cases for Metabolomics Data Annotation Using the `MetaboAnnotation` package","text":"LC-MS experiments compounds first chromatographically separated based property compound (mass). Thus, also retention times contain information can improve annotation. section use information previous experiment pure standards measured LC-MS setup used generate present test data retention time well ion (adduct) m/z value determined. reference values thus empirically determined instruments setup thus help get higher confidence annotations. load reference retention time m/z data measured standards. can now annotate chromatographic peaks using reference data. configure matching using MzRtParam, allows annotate query elements based m/z retention times. ppm define m/z-relative acceptable difference m/z values toleranceRt absolute acceptable difference measured retention times. parameters mzColname rtColname allow us define names columns query target objects containing m/z values retention time values matching. Settings ppm toleranceRt adapted experimental setup, retention time difference e.g. larger HILIC-based chromatographic separation. use difference 7 seconds (since retention times std_ions xcms result reported seconds). addition supplying reference (target) data data.frame also directly use IonDb. type annotation object extends used CompDb database providing addition general compound annotations also information measured ions including retention times m/z values. thus designed contain reference annotation databases specific LC-MS setups MS instrumentation used lab. create IonDb database (saved present example temporary file) HMDB CompDb database add ion annotations . advantage annotation database individual (text) file-based annotation approaches obvious: along annotation data also metadata can saved database can versioned, crucial reproducible workflows. Also, database’s SQLite file portable can distributed used different computers. addition, also possible use MySQL-based database system enable centralized annotation resources laboratory. information creation usage annotation resources CompoundDb package provided package vignettes also available . can now annotate peaks database using call , providing idb target parameter. total 9 chromatographic peaks annotated ion one standards. can identify chromatographic peaks available annotation using whichQuery function, returns index query. thus also subset matched results chromatographics peaks annotation. next build result table successfully annotated chromatographic peaks. Columns \"score\" \"score_rt\" contain difference query annotated target’s m/z (Da) retention time (seconds), respectively.","code":"fl <- system.file(\"txt\", \"std_ions.txt\",                   package = \"MetaboAnnotationTutorials\") std_ions <- read.table(fl, sep = \"\\t\", header = TRUE) head(std_ions) ##   compound_id ion_adduct ion_rt   ion_mz ## 1 HMDB0001539     [M+H]+    176 203.1503 ## 2 HMDB0000905     [M+H]+    208 332.0754 ## 3 HMDB0001847     [M+H]+     35 195.0877 ## 4 HMDB0001413     [M+H]+    217 490.1224 ## 5 HMDB0000562     [M+H]+     87 114.0662 ## 6 HMDB0000086     [M+H]+    189 258.1101 param <- MzRtParam(ppm = 10, toleranceRt = 7) pks_match <- matchMz(pks, std_ions, param = param,                      mzColname = c(\"mz\", \"ion_mz\"),                      rtColname = c(\"rt\", \"ion_rt\")) pks_match ## Object of class Matched  ## Total number of matches: 9  ## Number of query objects: 175 (9 matched) ## Number of target objects: 19 (9 matched) #' Create an IonDb filling it with data from cdb. idb <- IonDb(tempfile(), cdb)  #' Insert measured m/z and retention times for ions idb <- insertIon(idb, std_ions) idb ## class: IonDb  ##  data source: HMDB  ##  version: 5.0  ##  organism: Hsapiens  ##  compound count: 217776  ##  MS/MS spectra count: 64920  ##  ion count: 19 pks_match <- matchMz(     pks, ions(idb, c(\"compound_id\", \"ion_adduct\", \"ion_mz\", \"ion_rt\", \"name\")),     param = param, mzColname = c(\"mz\", \"ion_mz\"),     rtColname = c(\"rt\", \"ion_rt\")) pks_match ## Object of class Matched  ## Total number of matches: 9  ## Number of query objects: 175 (9 matched) ## Number of target objects: 19 (9 matched) whichQuery(pks_match) ## [1]  61  68  74  86  88 131 142 148 162 pks_match <- pks_match[whichQuery(pks_match)] library(pander) pandoc.table(as.data.frame(     matchedData(pks_match, c(\"peak_id\", \"target_name\", \"score\", \"score_rt\"))),     style = \"rmarkdown\", split.tables = Inf)"},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/articles/annotation-use-cases.html","id":"annotation-using-reference-mz-and-retention-indices","dir":"Articles","previous_headings":"\\(MS^1\\) annotation","what":"Annotation using reference m/z and retention indices","title":"Use Cases for Metabolomics Data Annotation Using the `MetaboAnnotation` package","text":"Retention time valuable orthogonal information metabolite identification, chromatographic conditions far standardized. Even using nominally chromatographic system, meaning column eluents, differences retention times arise due dead volumes, gradient delay volumes, etc. GC-MS retention time indexing used normalize drifts retention times converting retention indices. similar approach recently described LC-MS (Stoffel et al. 2021) using N-Alkyl-pyridinium sulfonates retention indexing substances. use allows convert retention times retention indices compare retention information across different LC-MS systems. first load data untargeted metabolomic experiments. data completely processed. feature identified unique name. Likewise load information N-Alkyl-pyridinium sulfonates. retention index defined number carbons alkyl chain times 100. relationship retention time retention index can plotted.  can use N-Alkly-pyridinium sulfonates convert retention times measured features using indexRtime function. default linear interpolation used conversion, (custom) functions can defined required. data can annotated using reference databases. Two different databases used. One obtained UHPLC column one HPLC column column chemistry. untargeted data obtained HPLC column, using different LC hardware, resulting different absolute retention times. Next can define Mass2MzRtParam similar . use absolute error 10 retention index units use [M+H]+[M+Na]+ adducts. Matching can now performed. Important column retention index needs defined using rtColname. Matching performed databases results filtered contain features least one match. next build result table successfully annotated chromatographic peaks. First results matching HPLC database. matching UPLC database.","code":"library(MetaboCoreUtils)  fl <- system.file(\"txt\", \"rti_ms_pos_features.txt\",                   package = \"MetaboAnnotationTutorials\") ms1_features <- read.table(fl, header = TRUE, sep = \"\\t\") head(ms1_features) ##            Name       mz    rtime Cel_pure_1.B.1_01_21144 ## 1 Cluster_00003 71.01397 1.527515                946.2993 ## 2 Cluster_00004 72.33667 1.529377               1402.1213 ## 3 Cluster_00006 86.37420 1.946073               7245.5283 ## 4 Cluster_00018 66.03701 1.454697               1306.3455 ## 5 Cluster_00025 71.03044 1.259239             256197.7500 ## 6 Cluster_00030 80.03526 1.259666             242820.3125 ##   Cel_pure_1.B.1_01_21149 Cel_pure_1.B.1_01_21154 Cel_pure_1.B.1_01_21159 ## 1                 806.088                 796.521                771.9626 ## 2                1427.545                1334.492               1400.0985 ## 3                8062.006                8196.895               8502.9092 ## 4                1389.757                1338.029               1341.1783 ## 5              238996.312              212299.125             242366.2188 ## 6              209218.312              174476.219             223134.0000 ##   Cel_pure_1.B.1_01_21164 ## 1                 713.608 ## 2                1503.299 ## 3                9668.902 ## 4                1584.487 ## 5              239547.453 ## 6              215851.828 fl <- system.file(\"txt\", \"rti_ms_pos_naps.txt\",                   package = \"MetaboAnnotationTutorials\") ms1_naps <- read.table(fl, header = TRUE, sep = \"\\t\") head(ms1_naps) ##   rtime rindex ## 1    NA    100 ## 2   1.5    200 ## 3   1.7    300 ## 4   2.6    400 ## 5   5.9    500 ## 6  10.3    600 plot(ms1_naps) ms1_features$rindex <- indexRtime(ms1_features$rtime, ms1_naps) fl <- system.file(\"txt\", \"rti_db_hplc.txt\",                   package = \"MetaboAnnotationTutorials\") db_hplc <- read.table(fl, header = TRUE, sep = \"\\t\",                       quote = \"\", comment.char = \"\")  fl <- system.file(\"txt\", \"rti_db_uhplc.txt\",                   package = \"MetaboAnnotationTutorials\") db_uhplc <- read.table(fl, header = TRUE, sep = \"\\t\",                       quote = \"\", comment.char = \"\") match_param <- Mass2MzRtParam(adducts = c(\"[M+H]+\", \"[M+Na]+\"),                               tolerance = 0.005,                               toleranceRt = 10) matches_hplc <- matchMz(ms1_features,                         db_hplc,                         match_param,                         massColname = \"exact.mass\",                         mzColname = \"mz\",                         rtColname = \"rindex\")  matches_hplc <- matches_hplc[whichQuery(matches_hplc)]  matches_uhplc <- matchMz(ms1_features,                          db_uhplc,                          match_param,                          massColname = \"exact.mass\",                          mzColname = \"mz\",                          rtColname = \"rindex\")  matches_uhplc <- matches_uhplc[whichQuery(matches_uhplc)] library(pander) pandoc.table(head(as.data.frame(   matchedData(matches_hplc, c(\"Name\", \"mz\", \"rindex\", \"target_name\",                               \"adduct\", \"score\", \"score_rt\")))),   style = \"rmarkdown\", split.tables = Inf) library(pander) pandoc.table(head(as.data.frame(   matchedData(matches_uhplc, c(\"Name\", \"mz\", \"rindex\", \"target_name\",                                \"adduct\", \"score\", \"score_rt\")))),   style = \"rmarkdown\", split.tables = Inf)"},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/articles/annotation-use-cases.html","id":"ms2","dir":"Articles","previous_headings":"","what":"\\(MS^2\\) annotation","title":"Use Cases for Metabolomics Data Annotation Using the `MetaboAnnotation` package","text":"addition \\(MS^1\\) annotation described previous section, also possible annotate features (chromatographic peaks) comparing experimentally measured \\(MS^2\\) (MS/MS) spectra reference spectra. annotation can performed using matchSpectra MetaboAnnotation package takes Spectra objects (\\(MS^2\\) spectra) query target parameters. Spectra objects can either imported variety input formats, including MGF, MSP, mzML, mzXML netCDF files, extracted xcms result objects even retrieved databases MassBank (see also tutorials SpectraTutorials examples use cases). illustrate , extract section \\(MS^2\\) spectra annotated chromatographic peaks previous section compare reference \\(MS^2\\) spectra HMDB. Annotation reliability can increased , addition m/z retention time, also \\(MS^2\\) spectra chromatographic peak feature matches reference spectrum pure standard. first extract \\(MS^2\\) spectra annotated chromatographic peaks using chromPeakSpectra function xcms result object. return \\(MS^2\\) spectra precursor m/z retention time within m/z ranges retention time ranges detected chromatographic peaks. xcms result object containing also correspondence results (.e. grouped chromatographic peaks across samples, also referred features) featureSpectra function used instead. chromatographic peaks one \\(MS^2\\) spectrum, total \\(MS^2\\) spectra 7 chromatographic peaks. count number spectra per peak. matching spectra cleaning experimental spectra removing peaks intensity lower 5% spectra’s highest peak intensity removing spectra less 3 peaks. addition, scale peak intensities within spectrum values 0 100. mostly visualization reason, since spectra similarity scoring algorithms independent absolute peak intensities. match now cleaned spectra reference spectra HMDB. configure matching using CompareSpectraParam allowing m/z differences 50ppm peaks query target spectrum. Since HMDB provide precursor m/z addition disable additional matching filter (.e. set requirePrecursor = FALSE), however negative impact performance comparisons. default, spectra similarities (calculated normalized dot product) higher 0.7 considered matching. Thus, total 4 query spectra matched 27. create result table matching. Matching results can also easily visualized plotSpectraMirror function. show results first peak (Caffeine). upper spectrum represents query, lower target (reference) spectrum.  results seem reasonable. second peak (third spectrum) match based however single peak.  Note now also add (cleaned annotated) \\(MS^2\\) spectra present test set, IonDb using insertSpectra function. enables generation lab-internal reference databases including also MS/MS spectra.","code":"std_spectra <- chromPeakSpectra(std_data, return.type = \"Spectra\",                                 peaks = pks_match$peak_id) std_spectra ## MSn data (Spectra) with 11 spectra in a MsBackendMzR backend: ##           msLevel     rtime scanIndex ##         <integer> <numeric> <integer> ## F1.S107         2    35.650       107 ## F1.S193         2    66.622       193 ## F1.S224         2    78.600       224 ## F1.S127         2    38.323       127 ## F1.S159         2    50.239       159 ## F1.S581         2   184.743       581 ## F1.S649         2   197.112       649 ## F1.S548         2   175.749       548 ## F1.S600         2   188.408       600 ## F1.S707         2   209.046       707 ## F1.S760         2   221.347       760 ##  ... 38 more variables/columns. ##  ## file(s): ## HighIS_Mix07_CE20_POS.mzML table(std_spectra$peak_id) ##  ## CP067 CP074 CP080 CP143 CP154 CP162 CP176  ##     1     2     2     2     1     1     2 #' Define a function to remove low intensity peaks low_int <- function(x, ...) {     x > max(x, na.rm = TRUE) * 0.05 } #' Remove peaks with an intensity below 5% of BPI std_spectra <- filterIntensity(std_spectra, intensity = low_int)  #' Remove peaks with less than 3 peaks std_spectra <- std_spectra[lengths(std_spectra) > 2] std_spectra ## MSn data (Spectra) with 8 spectra in a MsBackendMzR backend: ##           msLevel     rtime scanIndex ##         <integer> <numeric> <integer> ## F1.S107         2    35.650       107 ## F1.S127         2    38.323       127 ## F1.S159         2    50.239       159 ## F1.S581         2   184.743       581 ## F1.S649         2   197.112       649 ## F1.S548         2   175.749       548 ## F1.S600         2   188.408       600 ## F1.S707         2   209.046       707 ##  ... 38 more variables/columns. ##  ## file(s): ## HighIS_Mix07_CE20_POS.mzML ## Lazy evaluation queue: 1 processing step(s) ## Processing: ##  Remove peaks based on their intensities and a user-provided function in spectra of MS level(s) 2. [Tue May 30 08:03:49 2023] #' Define a function to *scale* the intensities scale_int <- function(x, ...) {     maxint <- max(x[, \"intensity\"], na.rm = TRUE)     x[, \"intensity\"] <- 100 * x[, \"intensity\"] / maxint     x } #' *Apply* the function to the data std_spectra <- addProcessing(std_spectra, scale_int) spectra_match <- matchSpectra(     std_spectra, Spectra(cdb),     param = CompareSpectraParam(ppm = 50, requirePrecursor = FALSE)) spectra_match ## Object of class MatchedSpectra  ## Total number of matches: 27  ## Number of query objects: 8 (4 matched) ## Number of target objects: 64920 (27 matched) res <- spectraData(spectra_match,                    c(\"peak_id\", \"target_compound_id\",                      \"target_name\", \"score\")) rownames(res) <- NULL pandoc.table(as.data.frame(res),     style = \"rmarkdown\", split.tables = Inf) plotSpectraMirror(spectra_match[1]) plotSpectraMirror(spectra_match[3])"},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/articles/annotation-use-cases.html","id":"working-with-data-from-other-tools","dir":"Articles","previous_headings":"","what":"Working with data from other tools","title":"Use Cases for Metabolomics Data Annotation Using the `MetaboAnnotation` package","text":"\\(MS^1\\)-based annotations can performed data.frame similar provides \\(m/z\\) /retention time values. \\(MS^2\\)-based annotations Spectra object needed, can imported variety formats. section show pre-processing results external tool (case MZmine) can imported used input MetaboAnnotation. test data using one example data sets GNPS Feature-Based Molecular Networking (Nothias et al. 2020). description data generated provided GNPS Feature-Based Molecular Networking documentation. data set consists feature abundances (along retention time m/z values) \\(MS^2\\) spectra features. example files distributed github repository GNPS documentation https://github.com/CCMS-UCSD/GNPSDocumentation.git. first download feature table (csv format) mentioned repository temporary file. next load file R using base read.csv function. can now use file input \\(MS^1\\)-based annotation, shown section Annotation using m/z values , match m/z values features HMDB assuming [M+H]+ [M+Na]+ adducts. parameter mzColname define column input file containing m/z values. MZmine column \"row m/z\". 2251 total 3443 features compound matching feature’s m/z found. \\(MS^2\\) spectra can exported MZmine mgf file format. download MGF file \\(MS^2\\) spectra features example temporary folder. Files MGF format can imported MsBackendMgf package. use package create Spectra object spectra example file. default data fields original MGF file imported. Thus, Spectra object contains also variable called FEATURE_ID identifiers features spectra associated . Spectra object simply used input parameter matchSpectra function shown \\(MS^2\\) annotation section e.g. identify matches reference spectra HMDB.","code":"f_file <- \"MZmine-GNPS_AG_test_featuretable.csv\" url <- paste0(\"https://raw.githubusercontent.com/CCMS-UCSD/GNPSDocumentation\",               \"/master/docs/tutorials/AG_tutorial_files/\") curl_download(paste0(url, f_file),               destfile = file.path(tempdir(), f_file)) ftable <- read.csv(file.path(tempdir(), f_file), check.names = FALSE) param <- Mass2MzParam(adducts = c(\"[M+H]+\", \"[M+Na]+\"), ppm = 10)  f_match <- matchMz(     ftable,     compounds(cdb, c(\"compound_id\", \"exactmass\", \"formula\", \"name\")),     param = param,     mzColname = \"row m/z\") f_match ## Object of class Matched  ## Total number of matches: 31333  ## Number of query objects: 3443 (2251 matched) ## Number of target objects: 217776 (13194 matched) s_file <- \"MZmine-GNPS_AG_test_GNPS.mgf\" curl_download(paste0(url, s_file),               destfile = file.path(tempdir(), s_file)) library(MsBackendMgf) sps_mgf <- Spectra(file.path(tempdir(), s_file),                    source = MsBackendMgf()) head(sps_mgf$FEATURE_ID) ## [1] \"1\" \"2\" \"3\" \"4\" \"6\" \"7\""},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/articles/annotation-use-cases.html","id":"package-repositories-and-additional-tutorials","dir":"Articles","previous_headings":"","what":"Package repositories and additional tutorials","title":"Use Cases for Metabolomics Data Annotation Using the `MetaboAnnotation` package","text":"Tutorial additional examples explanations \\(MS^2\\)-based annotations: https://jorainer.github.io/SpectraTutorials/ Repository MsCoreUtils package: https://rformassspectrometry.github.io/MsCoreUtils/ Repository MetaboCoreUtils package: https://rformassspectrometry.github.io/MetaboCoreUtils/ Repository Spectra package: https://rformassspectrometry.github.io/Spectra/ Repository MetaboAnnotation package: https://rformassspectrometry.github.io/MetaboAnnotation/ Repository CompoundDb package: https://rformassspectrometry.github.io/CompoundDb/","code":""},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/articles/annotation-use-cases.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Use Cases for Metabolomics Data Annotation Using the `MetaboAnnotation` package","text":"R version versions used packages listed .","code":"sessionInfo() ## R version 4.3.0 (2023-04-21) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 22.04.2 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] MsBackendMgf_1.8.0      Spectra_1.10.1          MetaboCoreUtils_1.8.0   ##  [4] pander_0.6.5            MetaboAnnotation_1.4.1  CompoundDb_1.4.0        ##  [7] AnnotationFilter_1.24.0 curl_5.0.0              xcms_3.22.0             ## [10] MSnbase_2.26.0          ProtGenerics_1.29.1     S4Vectors_0.38.1        ## [13] mzR_2.35.1              Rcpp_1.0.10             Biobase_2.60.0          ## [16] BiocGenerics_0.46.0     BiocParallel_1.34.2     knitr_1.43              ## [19] BiocStyle_2.28.0        ##  ## loaded via a namespace (and not attached): ##   [1] DBI_1.1.3                   bitops_1.0-7                ##   [3] gridExtra_2.3               rlang_1.1.1                 ##   [5] magrittr_2.0.3              clue_0.3-64                 ##   [7] MassSpecWavelet_1.66.0      RSQLite_2.3.1               ##   [9] matrixStats_0.63.0          compiler_4.3.0              ##  [11] png_0.1-8                   systemfonts_1.0.4           ##  [13] vctrs_0.6.2                 stringr_1.5.0               ##  [15] pkgconfig_2.0.3             crayon_1.5.2                ##  [17] fastmap_1.1.1               dbplyr_2.3.2                ##  [19] XVector_0.40.0              utf8_1.2.3                  ##  [21] rmarkdown_2.21              preprocessCore_1.62.1       ##  [23] ragg_1.2.5                  bit_4.0.5                   ##  [25] purrr_1.0.1                 MultiAssayExperiment_1.26.0 ##  [27] xfun_0.39                   zlibbioc_1.46.0             ##  [29] cachem_1.0.8                ChemmineR_3.52.0            ##  [31] GenomeInfoDb_1.36.0         jsonlite_1.8.4              ##  [33] blob_1.2.4                  highr_0.10                  ##  [35] DelayedArray_0.26.3         parallel_4.3.0              ##  [37] cluster_2.1.4               R6_2.5.1                    ##  [39] bslib_0.4.2                 stringi_1.7.12              ##  [41] RColorBrewer_1.1-3          limma_3.56.1                ##  [43] GenomicRanges_1.52.0        jquerylib_0.1.4             ##  [45] SummarizedExperiment_1.30.1 iterators_1.0.14            ##  [47] base64enc_0.1-3             IRanges_2.34.0              ##  [49] igraph_1.4.3                Matrix_1.5-4.1              ##  [51] splines_4.3.0               tidyselect_1.2.0            ##  [53] yaml_2.3.7                  doParallel_1.0.17           ##  [55] codetools_0.2-19            affy_1.78.0                 ##  [57] lattice_0.21-8              tibble_3.2.1                ##  [59] plyr_1.8.8                  evaluate_0.21               ##  [61] desc_1.4.2                  survival_3.5-5              ##  [63] xml2_1.3.4                  pillar_1.9.0                ##  [65] affyio_1.70.0               BiocManager_1.30.20         ##  [67] MatrixGenerics_1.12.0       DT_0.28                     ##  [69] foreach_1.5.2               MALDIquant_1.22.1           ##  [71] ncdf4_1.21                  generics_0.1.3              ##  [73] rprojroot_2.0.3             RCurl_1.98-1.12             ##  [75] ggplot2_3.4.2               munsell_0.5.0               ##  [77] scales_1.2.1                glue_1.6.2                  ##  [79] lazyeval_0.2.2              MsFeatures_1.8.0            ##  [81] tools_4.3.0                 mzID_1.38.0                 ##  [83] robustbase_0.95-1           QFeatures_1.10.0            ##  [85] vsn_3.68.0                  RANN_2.6.1                  ##  [87] fs_1.6.2                    XML_3.99-0.14               ##  [89] grid_4.3.0                  impute_1.74.1               ##  [91] MsCoreUtils_1.12.0          colorspace_2.1-0            ##  [93] GenomeInfoDbData_1.2.10     cli_3.6.1                   ##  [95] textshaping_0.3.6           rsvg_2.4.0                  ##  [97] fansi_1.0.4                 S4Arrays_1.0.4              ##  [99] dplyr_1.1.2                 pcaMethods_1.92.0           ## [101] gtable_0.3.3                DEoptimR_1.0-13             ## [103] sass_0.4.6                  digest_0.6.31               ## [105] htmlwidgets_1.6.2           rjson_0.2.21                ## [107] memoise_2.0.1               htmltools_0.5.5             ## [109] pkgdown_2.0.7.9000          multtest_2.56.0             ## [111] lifecycle_1.0.3             bit64_4.0.5                 ## [113] MASS_7.3-60"},{"path":[]},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Johannes Rainer. Author, maintainer. Michael Witting. Author. Laurent Gatto. Author. Sebastian Gibb. Author.","code":""},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rainer J, Vicini , Salzer L, Stanstrup J, Badia JM, Neumann S, Stravs MA, Verri Hernandes V, Gatto L, Gibb S Wittin M. Modular Expandable Ecosystem Metabolomics Data Annotation R Metabolites 2022, 12, 173. https://doi.org/10.3390/metabo12020173","code":"@Article{,   title = {A Modular and Expandable Ecosystem for Metabolomics Data Annotation in R},   author = {Johannes Rainer and Andrea Vicini and Liesa Salzer and Jan Stanstrup and Josep M. Badia and Steffen Neumann and Michael A. Stravs and Vinicius {Verri Hernandes} and Laurent Gatto and Sebastian Gibb and Michael Witting},   journal = {Metabolites},   year = {2022},   doi = {10.3390/metabo12020173},   url = {https://www.mdpi.com/2218-1989/12/2/173},   volume = {12},   pages = {173}, }"},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/index.html","id":"use-cases-and-examples-for-annotation-of-untargeted-metabolomics-data","dir":"","previous_headings":"","what":"Metabolomics Data Annotation Using MetaboAnnotation","title":"Metabolomics Data Annotation Using MetaboAnnotation","text":"repository provides use cases examples annotation non-target metabolomics small compound MS data using MetaboAnnotation MetaboCoreUtils R packages. Refer original article Modular Expandable Ecosystem Metabolomics Data Annotation R cite package/repository functionality described .","code":""},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Metabolomics Data Annotation Using MetaboAnnotation","text":"Requirements: R version >= 4.2 (hence Bioconductor 3.15) needed. R packages well example files used document can installed R code : Alternatively, packages can installed individually : source code document along test data can downloaded github repository https://github.com/jorainer/MetaboAnnotationTutorials command (alternatively downloading zip archive directly github page).","code":"install.packages(\"BiocManager\") BiocManager::install(\"jorainer/MetaboAnnotationTutorials\",     dependencies = TRUE, ask = FALSE, update = TRUE) install.packages(\"BiocManager\") BiocManager::install(\"ProtGenerics\")  ## Packages with low-level core functionality BiocManager::install(\"MsCoreUtils\") BiocManager::install(\"MetaboCoreUtils\")  ## Packages with high-level user functionality BiocManager::install(\"Spectra\") BiocManager::install(\"MetaboAnnotation\") BiocManager::install(\"CompoundDb\")  ## Support for MGF files BiocManager::install(\"MsBackendMgf\")  ## Support for MassBank BiocManager::install(\"MsBackendMassbank\")  ## Support for MSP files BiocManager::install(\"MsBackendMsp\") git clone https://github.com/jorainer/MetaboAnnotationTutorials"},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/index.html","id":"additional-documentation-resources-and-tutorials","dir":"","previous_headings":"","what":"Additional documentation resources and tutorials","title":"Metabolomics Data Annotation Using MetaboAnnotation","text":"Tutorial additional examples explanations MS2-based annotations: https://jorainer.github.io/SpectraTutorials/ Repository MsCoreUtils package: https://rformassspectrometry.github.io/MsCoreUtils/ Repository MetaboCoreUtils package: https://rformassspectrometry.github.io/MetaboCoreUtils/ Repository Spectra package: https://rformassspectrometry.github.io/Spectra/ Repository MetaboAnnotation package: https://rformassspectrometry.github.io/MetaboAnnotation/ Repository CompoundDb package: https://rformassspectrometry.github.io/CompoundDb/","code":""},{"path":[]},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/news/index.html","id":"changes-in-0-1","dir":"Changelog","previous_headings":"","what":"Changes in 0.1.3","title":"MetaboAnnotationTutorials 0.1","text":"Update installation instructions.","code":""},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/news/index.html","id":"changes-in-0-1-1","dir":"Changelog","previous_headings":"","what":"Changes in 0.1.2","title":"MetaboAnnotationTutorials 0.1","text":"Add reference citation.","code":""},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/news/index.html","id":"changes-in-0-1-2","dir":"Changelog","previous_headings":"","what":"Changes in 0.1.1","title":"MetaboAnnotationTutorials 0.1","text":"Adapt changes Spectra >= 1.5.8. Adapt changes CompoundDb >= 0.9.6: \"target_name\" available spectra variable Spectra objects returned CompDb database. Adapt changes MetaboAnnotation >= 0.99.4: also ppm error reported matchMz.","code":""},{"path":"https://jorainer.github.io/MetaboAnnotationTutorials/news/index.html","id":"changes-in-0-1-3","dir":"Changelog","previous_headings":"","what":"Changes in 0.1.0","title":"MetaboAnnotationTutorials 0.1","text":"Add examples importing result data MZmine.","code":""}]
